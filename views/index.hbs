<!DOCTYPE html>
<html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <link href="https://cdn.bootcss.com/leaflet/1.3.4/leaflet.css" rel="stylesheet">
        <script src="https://cdn.bootcss.com/leaflet/1.3.4/leaflet.js"></script>
    </head>
    
    <body>
        <h2>YND's First WebGIS</h2>
        <a href="https://github.com/NuodaY/webgis">作品github页</a>
        <div id="map" style="width:100%;height: 600px;"></div>
        <p id="points">{{Latlngs}}</p>

        <script> 
            // mapbox 地图服务URL
            var mapboxUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
            var mapAttr = 'Map data &copy; <a href="https://www.openstreetmap.org/">《YND的首个网络地信系统》' + 'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>'
            // 定义两个图层，影像图层和街道图层（这里是有了mapbox地图服务）
            var satellite = L.tileLayer(mapboxUrl, { id: 'mapbox.satellite' });
            var streets = L.tileLayer(mapboxUrl, { id: 'mapbox.streets'});

            // 创建地图实例
            var map = L.map('map', {
                center: [30, 120],
                zoom: 5,
                // 展示`影像图` 和 `街道图` 两个图层
                layers: [streets, satellite]    
            });

            // 通过layer control来实现图层切换UI
            // https://leafletjs.com/examples/layers-control/
            var baseLayers = {
                "影像图": satellite,
                "街道图": streets
            };
            L.control.layers(baseLayers).addTo(map);

            // 这里注意，如果地图中心地位位置不对，可能绘制了折线看不到，所以这里获取折线的最外层矩形区域，进行缩放到折线范围
            // map.fitBounds(polyline.getBounds());

            var Latlngs = document.getElementById("points").innerHTML
            Latlngs = JSON.parse(Latlngs)
            for(var typhoonID in Latlngs){
                polyline = L.polyline(Latlngs[typhoonID], { color: 'blue' }).addTo(map)
            }

        </script>
    
    </body>

</html>