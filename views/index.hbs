<!DOCTYPE html>
<html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <link href="https://cdn.bootcss.com/leaflet/1.3.4/leaflet.css" rel="stylesheet">
        <link href="style.css" rel="stylesheet">
        <script src="https://cdn.bootcss.com/leaflet/1.3.4/leaflet.js"></script>
    </head>
    
    <body>
        <h2>YND's First WebGIS</h2>

        <ul>
            <li><a href="/">主页</a></li>
            <li><a href="/measure" target="_blank">测量距离</a></li>
            <li><a href="/about">关于</a></li>
            <li><a href="https://github.com/NuodaY/webgis">Github页</a></li>
            <li>
                <p>查询台风</p>

                <form action="/typhoonDetails" method="post">
                    <input type="text" name="id" id='typhoonId'>
                    <input type="submit" value="查看" id='typhoonId'>
                </form>

            </li>
        </ul>
        
        <div id="map" style="width:100%;height: 600px;"></div>
        <p hidden id="points">{{Latlngs}}</p>

        <script> 
            // 地图被点击
            function mapClicked(e){
                popup
                    .setLatLng(e.latlng)
                    .setContent("此处经、纬度分别为" + e.latlng.toString())
                    .openOn(map);
            }
            // mapbox 地图服务URL
            var mapboxUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
            var mapAttr = 'Map data &copy; <a href="https://www.openstreetmap.org/">《YND的首个网络地信系统》' + 'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>'
            // 定义影像图层和街道图层
            var satellite = L.tileLayer(mapboxUrl, { id: 'mapbox.satellite' });
            var streets = L.tileLayer(mapboxUrl, { id: 'mapbox.streets'});

            // 创建地图实例
            var map = L.map('map', {
                center: [30, 120],
                zoom: 5,
                // 展示影像图和街道图
                layers: [streets, satellite]    
            });
            
            // 通过layer control来实现图层切换UI
            // https://leafletjs.com/examples/layers-control/
            var baseLayers = {
                "影像图": satellite,
                "街道图": streets
            };
            L.control.layers(baseLayers).addTo(map);

            var typhoonIcon = L.icon({
                iconUrl: "http://pic.90sjimg.com/design/03/57/50/04/5d511012e7ae9.png!/fw/325/quality/90/unsharp/true/compress/true/canvas/325x322a0a0/cvscolor/FFFFFFFF",
                iconSize: [40, 40]
            })

            // 获取台风经纬数据
            var Latlngs = document.getElementById("points").innerHTML
            Latlngs = JSON.parse(Latlngs)
            // 获取数据键
            var LatlngKeys = Object.keys(Latlngs);
            // 遍历
            var i = 0;
            for(var typhoonID in Latlngs){
                marker = L.marker(Latlngs[typhoonID][0], {icon: typhoonIcon}).addTo(map);
                marker.bindPopup("typhoone ID:" + LatlngKeys[i]).openPopup();
                polyline = L.polyline(Latlngs[typhoonID], { color: 'blue' }).addTo(map)
                i += 1;
            }

            var popup = L.popup();
            map.on('click', mapClicked);

        </script>
    
    </body>

</html>